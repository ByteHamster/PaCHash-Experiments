cmake_minimum_required(VERSION 3.16)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
project(ObjectStoreComparison)

add_executable(ObjectStoreComparison main.cpp)
target_compile_features(ObjectStoreComparison PUBLIC cxx_std_20)
set_property(TARGET ObjectStoreComparison PROPERTY CXX_STANDARD 20)

set(WITH_TESTS OFF CACHE PATH "")
set(WITH_BENCHMARK_TOOLS OFF CACHE PATH "")
set(WITH_CORE_TOOLS OFF CACHE PATH "")
set(WITH_TOOLS OFF CACHE PATH "")
set(WITH_GFLAGS OFF CACHE PATH "")
set(WITH_LIBURING ON CACHE PATH "")
set(ROCKSDB_BUILD_SHARED OFF CACHE PATH "")
add_subdirectory(external/rocksdb)
target_compile_features(rocksdb PUBLIC cxx_std_17)
set_property(TARGET rocksdb PROPERTY CXX_STANDARD 17)
target_link_libraries(ObjectStoreComparison PUBLIC rocksdb)
target_include_directories(ObjectStoreComparison SYSTEM PUBLIC external/rocksdb/include)

set(LEVELDB_BUILD_TESTS OFF CACHE PATH "")
set(LEVELDB_BUILD_BENCHMARKS OFF CACHE PATH "")
set(LEVELDB_INSTALL OFF CACHE PATH "")
add_subdirectory(external/leveldb)
target_compile_features(leveldb PUBLIC cxx_std_17)
set_property(TARGET leveldb PROPERTY CXX_STANDARD 17)
target_link_libraries(ObjectStoreComparison PUBLIC leveldb)
target_include_directories(ObjectStoreComparison SYSTEM PUBLIC external/leveldb/include)

file(GLOB silt_SRC external/silt/fawnds/*.cc external/silt/fawnds/*.cpp)
list(FILTER silt_SRC EXCLUDE REGEX ".*fawnds_sf_ordered_binarysearch\\.cc$")
file(GLOB silt_cindex_SRC external/silt/fawnds/cindex/*.cpp)
list(FILTER silt_cindex_SRC EXCLUDE REGEX ".*bench_SOSP\\.cpp$")
file(GLOB silt_util_SRC external/silt/utils/*.cc)
add_library(silt ${silt_SRC} ${silt_cindex_SRC} ${silt_util_SRC})
target_include_directories(silt SYSTEM PUBLIC external/silt/fawnds)
target_include_directories(silt SYSTEM PUBLIC external/silt/fawnds/cindex)
target_include_directories(silt SYSTEM PUBLIC external/silt/utils)
find_package (XercesC REQUIRED)
find_package(OpenSSL REQUIRED)
target_link_libraries(silt PUBLIC ${XercesC_LIBRARIES} ${OPENSSL_LIBRARIES} gsl cblas tbb)
set_property(TARGET silt PROPERTY POSITION_INDEPENDENT_CODE ON)
target_compile_features(silt PUBLIC cxx_std_17)
set_property(TARGET silt PROPERTY CXX_STANDARD 17)
target_link_libraries(ObjectStoreComparison PUBLIC silt)

#add_custom_command(OUTPUT external/silt/utils/config.h
#        COMMAND autoreconf -is && ./configure && mv config.h utils/config.h && sed -i 's/HAVE_LIBDB/HAVE_LIBDB_NO/g' utils/config.h
#        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/external/silt)
#add_custom_target(siltConfig DEPENDS external/silt/utils/config.h)
#add_dependencies(silt siltConfig)

add_subdirectory(external/pachash)
target_compile_features(PaCHash INTERFACE cxx_std_20)
target_link_libraries(ObjectStoreComparison PUBLIC PaCHash)

add_library(sux INTERFACE)
target_include_directories(sux SYSTEM INTERFACE external/sux)
target_link_libraries(ObjectStoreComparison PRIVATE sux)

file(GLOB cmphSources external/cmph/src/**.c cmph/src/**.h)
list(FILTER cmphSources EXCLUDE REGEX ".*cmph/src/(bdz_gen_lookup_table|bm_numbers|sdbm_hash|fnv_hash|djb2_hash|hashtree|buffer_manage|main).c$")
add_library(Cmph SHARED ${cmphSources})
target_include_directories(Cmph PUBLIC external/cmph/src)
target_link_libraries(ObjectStoreComparison PRIVATE Cmph)

add_library(malloc_count SHARED external/malloc_count/malloc_count.c)
target_include_directories(malloc_count PUBLIC external/malloc_count)
target_link_libraries(ObjectStoreComparison PRIVATE malloc_count)
target_compile_definitions(ObjectStoreComparison PRIVATE MALLOC_COUNT=1)
